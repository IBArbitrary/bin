#!/usr/bin/env python3
import os
import re
from rich import print as pprint

CONFIG_FILE_ = f"{os.path.expanduser('~')}/.config/sxhkd/sxhkdrc"
CONFIG_FILE = f"{os.path.expanduser('~')}/temp/sxtest"
DST = "bold"
KST = "i green"
CST = ""

def reader(path: str):
    content = ""
    with open(path, 'r', encoding="utf-8") as f:
        content = f.read()
    return content

def globber(content: str):
    out = []
    for _ in content.split("\n\n"):
        _ = _.strip()
        if _[:4] == "#== ":
            out.append(_)
    return out

def breaker(line: str, override: bool = False):
    pattern = r"{(.*?)}"
    matches = re.search(pattern, line)
    if matches and (not override):
        parts = matches.group(1).split(",")
        wholes = [re.sub(r'{.*}', _, line).strip() for _ in parts]
        return wholes
    return [line]

def classifier(lines: str):
    lines = [_.strip() for _ in lines.split("\n") if _.strip()]
    defn = [_[4:] for _ in breaker(lines.pop(0))]
    keys = []
    cmds = []
    override = False
    if len(defn) == 1:
        override = True
    while lines:
        key = lines.pop(0)
        cmd = lines.pop(0)
        keys += breaker(key, override = override)
        cmds += breaker(cmd, override = override)
    alt = False
    if (len(keys) == len(cmds)) and (len(keys) // len(defn) > 1):
        alt = True
    return {
        "defn": defn,
        "keys": keys,
        "cmds": cmds,
        "alt": alt
    }

def printer(hk: dict, ifcmd = False):
    defn = hk['defn']
    keys = hk['keys']
    cmds = hk['cmds']
    alt = hk['alt']
    if not alt:
        N = len(defn)
        for _ in range(N):
            pprint(f"[{DST}]{defn[_]}[/{DST}]")
            pprint(f"[{KST}]{keys[_]}[/{KST}]", "\n")
    else:
        pprint(f"[{DST}]{defn[0]}[/{DST}]")
        pprint(" \[or] ".join([f"[{KST}]{_}[/{KST}]" for _ in keys]), "\n")



for _ in globber(reader(CONFIG_FILE)):
    printer(classifier(_))
